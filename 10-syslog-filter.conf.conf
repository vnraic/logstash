filter {
   grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOG5424PRI} %{SYSLOGHOST:logsource} %{GREEDYDATA:raw_message}" }
   }

   grok {
      match => ["raw_message", "(?<new_message>%.*)"]
   }

   if "ASA" in [tags] {
      grok {
         match => { "new_message" => "(?<mnemonic>\S+): (?<description>.*)" }
      }
      grok {
      patterns_dir => ["/etc/logstash/custom/pattern"]
         match => [
            "description", "%{CISCOFW106001}",
            "description", "%{CISCOFW106006_106007_106010}",
            "description", "%{CISCOFW106014}",
            "description", "%{CISCOFW106015}",
            "description", "%{CISCOFW106017}",
            "description", "%{CISCOFW106021}",
            "description", "%{CISCOFW106023}",
            "description", "%{CISCOFW106100}",
            "description", "%{CISCOFW110002}",
            "description", "%{CISCOFW302010}",
            "description", "%{CISCOFW302013_302014_302015_302016}",
            "description", "%{CISCOFW302020_302021}",
            "description", "%{CISCOFW304001}",
            "description", "%{CISCOFW305011}",
            "description", "%{CISCOFW313001_313004_313008}",
            "description", "%{CISCOFW313005}",
            "description", "%{CISCOFW402117}",
            "description", "%{CISCOFW402119}",
            "description", "%{CISCOFW419001}",
            "description", "%{CISCOFW419002}",
            "description", "%{CISCOFW500004}",
            "description", "%{CISCOFW602303_602304}",
            "description", "%{CISCOFW710001_710002_710003_710005_710006}",
            "description", "%{CISCOFW713172}",
            "description", "%{CISCOFW733100}"
         ]
      }
      geoip {
         source => "src_ip"
         target => "geoip"
         database => "/etc/logstash/GeoLiteCity.dat"
         add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
         add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
      }
      mutate {
         convert => [ "[geoip][coordinates]", "float"]
      }
      geoip {
         database => "/etc/logstash/GeoIPASNum.dat"
         source => "src_ip"
      }
   } else if "IOS" in [tags] {
      grok {
         match => { "raw_message" => "(?<uptime>\S+): (?<mnemonic>\S+): (?<description>.*)" }
      }
   }
   syslog_pri {
      syslog_pri_field_name => "syslog5424_pri"
   }
   mutate {
         remove_field => [ "message", "raw_message", "new_message", "uptime", "host" ]
   }
}
